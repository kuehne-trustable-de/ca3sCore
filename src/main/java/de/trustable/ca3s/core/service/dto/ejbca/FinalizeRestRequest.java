/*
 * EJBCA REST Interface
 * API reference documentation.
 *
 * OpenAPI spec version: 1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package de.trustable.ca3s.core.service.dto.ejbca;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;

import java.io.IOException;
import java.util.Objects;
/**
 * FinalizeRestRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-02-27T11:17:53.164838525Z[GMT]")

public class FinalizeRestRequest {
  /**
   * Response format
   */
  @JsonAdapter(ResponseFormatEnum.Adapter.class)
  public enum ResponseFormatEnum {
    @JsonProperty("P12")
    P12("P12"),
    @JsonProperty("BCFKS")
    BCFKS("BCFKS"),
    @JsonProperty("JKS")
    JKS("JKS"),
    @JsonProperty("DER")
    DER("DER");

    private String value;

    ResponseFormatEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ResponseFormatEnum fromValue(String input) {
      for (ResponseFormatEnum b : ResponseFormatEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ResponseFormatEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ResponseFormatEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public ResponseFormatEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return ResponseFormatEnum.fromValue((String)(value));
      }
    }
  }  @JsonProperty("response_format")
  private ResponseFormatEnum responseFormat = null;

  @JsonProperty("password")
  private String password = null;

  @JsonProperty("key_alg")
  private String keyAlg = null;

  @JsonProperty("key_spec")
  private String keySpec = null;

  public FinalizeRestRequest responseFormat(ResponseFormatEnum responseFormat) {
    this.responseFormat = responseFormat;
    return this;
  }

   /**
   * Response format
   * @return responseFormat
  **/
  @Schema(example = "P12", description = "Response format")
  public ResponseFormatEnum getResponseFormat() {
    return responseFormat;
  }

  public void setResponseFormat(ResponseFormatEnum responseFormat) {
    this.responseFormat = responseFormat;
  }

  public FinalizeRestRequest password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Password
   * @return password
  **/
  @Schema(example = "foo123", description = "Password")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public FinalizeRestRequest keyAlg(String keyAlg) {
    this.keyAlg = keyAlg;
    return this;
  }

   /**
   * Key algorithm
   * @return keyAlg
  **/
  @Schema(example = "RSA", description = "Key algorithm")
  public String getKeyAlg() {
    return keyAlg;
  }

  public void setKeyAlg(String keyAlg) {
    this.keyAlg = keyAlg;
  }

  public FinalizeRestRequest keySpec(String keySpec) {
    this.keySpec = keySpec;
    return this;
  }

   /**
   * Key specification
   * @return keySpec
  **/
  @Schema(example = "4096", description = "Key specification")
  public String getKeySpec() {
    return keySpec;
  }

  public void setKeySpec(String keySpec) {
    this.keySpec = keySpec;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FinalizeRestRequest finalizeRestRequest = (FinalizeRestRequest) o;
    return Objects.equals(this.responseFormat, finalizeRestRequest.responseFormat) &&
        Objects.equals(this.password, finalizeRestRequest.password) &&
        Objects.equals(this.keyAlg, finalizeRestRequest.keyAlg) &&
        Objects.equals(this.keySpec, finalizeRestRequest.keySpec);
  }

  @Override
  public int hashCode() {
    return Objects.hash(responseFormat, password, keyAlg, keySpec);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FinalizeRestRequest {\n");

    sb.append("    responseFormat: ").append(toIndentedString(responseFormat)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    keyAlg: ").append(toIndentedString(keyAlg)).append("\n");
    sb.append("    keySpec: ").append(toIndentedString(keySpec)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
